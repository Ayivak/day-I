#PF-Tryout
def diagonal_stars(number):
    for i in range(0,number):
        for j in range(i):
            print(".",end="") 
        print("*")
            
   #start writing your code here
number=5
diagonal_stars(number)


#PF-Prac-23
def divisible_by_sum(number):
    t=number
    s=0
    while(t>0):
        r=t%10 
        t=t//10
        s+=r 
    if (number%s==0):
        return True
    else:
        return False
number=66
print(divisible_by_sum(number))


#PF-Prac-24
def find_gcd(num1,num2):
    #start writing your code here
    if num2==0:
        return num1
    else:
        return find_gcd(num2,num1%num2)

num1=14
num2=35
print(find_gcd(num1,num2))







#PF-Prac-25
def list_of_count(word_list):
    #start writing your code here
    count_list=[]
    for i in word_list:
        count_list.append(len(i))
    return count_list

word_list=["COme","here"]
print(list_of_count(word_list))



#PF-Prac-26
def check_occurence(string):
    c=0
    d=0
    string=string.upper()
    #start writing your code here
    c=string.count("MAT")
    d=string.count("JET")
    if c==d:
        return True 
    else:
        return False
string="Jet on the Mat but mat is too long"
print(check_occurence(string))


#PF-Prac-27
def check_for_ten(num1,num2):
    d=num1+num2
    if num1==10 or num2==10 or d==10:
        return True
    return False
    #start writing your code here
    
print(check_for_ten(10,9))
